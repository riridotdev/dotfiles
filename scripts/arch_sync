#!/usr/bin/env bash

set -e

if [ "$(id -u)" != 0 ]; then
	echo "Must run as root" >&2
	exit 1
fi

services=(
	"systemd-networkd"
	"systemd-resolved"
	"systemd-timesyncd"
)

for service in "${services[@]}"; do
	if ! systemctl is-enabled "${service}"; then
		systemctl enable "${service}"
	fi
	if ! systemctl is-active "${service}"; then
		systemctl start "${service}"
		while ! systemctl is-active "${service}"; do
			sleep 1
		done
	fi
done

network_file_dir=/etc/systemd/network/

wired_network_file_path="${network_file_dir}20-wired.network"
if [ ! -f "$wired_network_file_path" ]; then
	cat <<-EOF >"$wired_network_file_path"
		[Match]
		Name=enp5s0

		[Network]
		DHCP=yes
	EOF

	systemctl restart systemd-networkd
fi

wireless_network_file_path="${network_file_dir}30-wireless.network"
if [ ! -f "$wireless_network_file_path" ]; then
	cat <<-EOF >"$wireless_network_file_path"
		[Match]
		Name=wlan0

		[Network]
		DHCP=yes
	EOF

	systemctl restart systemd-networkd
fi

if ! grep "nameserver 127.0.0.53" /etc/resolv.conf &>/dev/null; then
	echo "nameserver 127.0.0.53" >>/etc/resolv.conf
fi

if [ -n "${ARCH_HOSTNAME}" ]; then
	echo "${ARCH_HOSTNAME}" >/etc/hostname
fi

cat <<-EOF >/etc/xdg/user-dirs.defaults
	DOWNLOAD=downloads
EOF

install_list=(
	# Language Compilers and Runtimes
	"clang"
	"gcc"
	"go"
	"llvm"
	"lua"
	"nodejs"
	"python"
	"terraform"

	# Language Servers and Tools
	"gopls"
	"lua-language-server"
	"pyright"
	"ruff"
	"shellcheck"
	"shfmt"
	"typescript-language-server"

	# Language Package Managers
	"npm"

	# Debuggers and Analysis
	"delve"
	"gdb"
	"valgrind"

	# Build Tools
	"base-devel"
	"cmake"
	"make"
	"pkgconf"

	# Shell and Terminal
	"dash"
	"fish"

	# Editors
	"neovim"

	# CLI Tools
	"ansible"
	"archlinux-keyring"
	"bat"
	"bc"
	"cifs-utils"
	"cloc"
	"coreutils"
	"dmidecode"
	"expect"
	"eza"
	"fd"
	"file"
	"freerdp"
	"fzf"
	"git"
	"git-delta"
	"gnupg"
	"htop"
	"httpie"
	"jq"
	"libva-utils"
	"lsof"
	"man-db"
	"man-pages"
	"perf"
	"postgresql"
	"pwgen"
	"ripgrep"
	"rsync"
	"strace"
	"sudo"
	"sysstat"
	"tree"
	"unzip"
	"which"
	"zip"
	"zoxide"

	# Virtualisation
	"docker"
	"docker-compose"
	"libvirt"
	"qemu-base"
	"virt-install"
	"virt-viewer"

	# Third Party
	"aws-cli"
	"discord"
	"firefox"
	"firefox-developer-edition"
	"github-cli"

	# Graphical
	"xorg-server"
	"xorg-xev"
	"xorg-xinit"
	"xorg-xrandr"
	"xclip"

	# Networking
	"bind"
	"dog"
	"dnsmasq"
	"ethtool"
	"iwd"
	"mtr"
	"net-tools"
	"nmap"
	"openbsd-netcat"
	"openssh"
	"openvpn"
	"traceroute"
	"whois"
	"wireshark-qt"

	# Audio
	"alsa-utils"
	"pulseaudio"
	"xdg-desktop-portal"
	"xdg-desktop-portal-wlr"

	# Libraries
	"glfw"
	"raylib"
)

for i in "${install_list[@]}"; do
	if ! pacman -Q "$i" &>/dev/null; then
		pacman -S --noconfirm "$i"
	fi
done

if lspci | grep "Radeon RX"; then
	if ! pacman -Q libva-mesa-driver &>/dev/null; then
		pacman -S --noconfirm libva-mesa-driver
	fi
fi

if lscpu | grep "GenuineIntel"; then
	if ! pacman -Q intel-ucode &>/dev/null; then
		pacman -S --noconfirm intel-ucode
	fi
fi

if ! systemctl is-enabled libvirtd; then
	systemctl enable libvirtd
fi

if [ "$(realpath /usr/bin/sh)" != "$(which dash)" ]; then
	ln -snf "$(which dash)" /usr/bin/sh
fi

sudoers_line="%wheel ALL=(ALL:ALL) ALL"
sed -i "s/#\s*$sudoers_line/$sudoers_line/" /etc/sudoers
if ! grep -x "$sudoers_line" /etc/sudoers; then
	echo "$sudoers_line" >>/etc/sudoers
fi

if ! id ryan; then
	useradd -m -s "$(which bash)" ryan
fi

groups=(
	"docker"
	"libvirt"
	"wireshark"
	"wheel"
)
for group in "${groups[@]}"; do
	if ! groups ryan | grep -w "${group}" &>/dev/null; then
		usermod ryan -aG "${group}"
	fi
done

su ryan <<'EOF'
default_dirs=(
    "~/dev"
    "~/git"
    "~/mount"
)

for dir in "${default_dirs[@]}"; do
    dir="${dir/\~/$HOME}"
    if [ ! -d "${dir}" ]; then
        mkdir -p "${dir}"
    fi
done

git_repos=(
    "github/riridotdev/dotfiles=https://github.com/riridotdev/dotfiles.git"
    "github/riridotdev/st=https://github.com/riridotdev/st.git"
    "suckless/dwm=git://git.suckless.org/dwm"
)

for git_repo in "${git_repos[@]}"; do
    git_repo_parts=(${git_repo/=/ })
    
    git_repo_path="${HOME}/git/${git_repo_parts[0]}"
    if [ ! -d "${git_repo_path}" ]; then
        git clone "${git_repo_parts[1]}" "${git_repo_path}"
    fi
done

"${HOME}"/git/github/riridotdev/dotfiles/link

bat cache -b
EOF

if [ ! -f /usr/local/bin/dwm ]; then
	make -C "/home/ryan/git/suckless/dwm" install
fi

if [ ! -f /usr/local/bin/st ]; then
	make -C "/home/ryan/git/github/riridotdev/st" install
fi

if [ ! -f /usr/share/fonts/local/TamzenForPowerline10x20r ]; then
	curl -L https://github.com/sunaku/tamzen-font/archive/refs/tags/Tamzen-1.11.6.tar.gz | tar xz -C /tmp
	cp -r /tmp/tamzen-font-Tamzen-1.11.6/bdf/. /usr/share/fonts/local
fi
